<controls:WindowEx xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="clr-namespace:UVtools.WPF.Controls"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="UVtools.WPF.Windows.ToolWindow"
        CanResize="False"
        SizeToContent="Width"
        WindowStartupLocation="CenterOwner"
        Title="Tool"
        Icon="/Assets/Icons/UVtools.ico">


    <Grid RowDefinitions="Auto,Auto,Auto,Auto,*,Auto">
    
    <!-- Description -->
    <Border Grid.Row="0"
      Background="WhiteSmoke"
      Padding="10"
      IsVisible="{Binding Description, Converter={x:Static StringConverters.IsNotNullOrEmpty}}">
        <Expander IsExpanded="{Binding Settings.General.ExpandDescriptions}">
            <Expander.Header>
                <TextBlock Text="Description (Click to toggle)"
                           Width="{Binding ExpanderHeaderMaxWidth}"
                           FontWeight="Bold"
                           Cursor="Hand"/>
            </Expander.Header>
        <TextBox Classes="TransparentReadOnly"
                 HorizontalAlignment="Left"
                 Width="Infinity"
                 MaxWidth="{Binding DescriptionMaxWidth}"
                 FontSize="16"
                 Watermark="Description:"
                 Padding="5"
                 Text="{Binding Description}"/>
        </Expander>
    </Border>

    <!-- Layer Range -->
    <Border Grid.Row="1"
      Background="WhiteSmoke"
      Classes="GroupBox"
      Margin="5"
      IsVisible="{Binding LayerRangeVisible}">

      <StackPanel Orientation="Vertical">
        <Grid 
          ColumnDefinitions="Auto,*" Background="LightBlue">
          <TextBlock
            Padding="10" FontWeight="Bold"
            VerticalAlignment="Center"
            Text="Layer range selector"/>
          <CheckBox
            Grid.Column="1"
            Padding="10"
            FontWeight="Bold"
            VerticalAlignment="Center"
            HorizontalAlignment="Right"
            IsChecked="{Binding LayerRangeSync}"
            ToolTip.Tip="Synchronize and lock the layer range for single layer navigation"
            Content="Synchronize"/>
        </Grid>
        
        <Grid
          RowDefinitions="Auto,5,Auto"
          ColumnDefinitions="Auto,150,Auto,150,Auto"
          Margin="15">
          <TextBlock
            Grid.Row="0"
            Grid.Column="0"
            VerticalAlignment="Center"
            Text="From:"
            Margin="0,0,10,0"
            />

          <NumericUpDown
            Grid.Row="0"
            Grid.Column="1"
            VerticalAlignment="Center"
            Minimum="0"
            Maximum="{Binding MaximumLayerIndex}"
            Value="{Binding LayerIndexStart}"
            />

          <TextBlock
            Grid.Row="0"
            Grid.Column="2"
            VerticalAlignment="Center"
            Text="To:"
            IsEnabled="{Binding !LayerRangeSync}"
            Margin="20,0,10,0"
            />

          <NumericUpDown
            Grid.Row="0"
            Grid.Column="3"
            VerticalAlignment="Center"
            Maximum="{Binding MaximumLayerIndex}"
            IsEnabled="{Binding !LayerRangeSync}"
            Value="{Binding LayerIndexEnd}"
            />

          <Button Name="LayerSelectPresetButton"
            Grid.Row="0"
            Grid.Column="4"
            Margin="10,0,0,0"
            VerticalAlignment="Stretch"
            VerticalContentAlignment="Center"
            Padding="10,0,10,0"
            Content="Select ⮟"
            Command="{Binding OpenContextMenu}"
            CommandParameter="LayerSelectPreset"
            >
            <Button.ContextMenu>
              <ContextMenu Name="LayerSelectPresetContextMenu" PlacementMode="Bottom">
                <MenuItem
                  Header="_All layers"
                  HotKey="Ctrl + Shift + A" InputGesture="Ctrl + Shift + A"
                  Command="{Binding SelectAllLayers}"
                  />

                <MenuItem
                  Header="_Current layer"
                  HotKey="Ctrl + Shift + C" InputGesture="Ctrl + Shift + C"
                  Command="{Binding SelectCurrentLayer}"
                  />

                <Separator />

                <MenuItem
                  Header="_Bottom layers"
                  HotKey="Ctrl + Shift + B" InputGesture="Ctrl + Shift + B"
                  Command="{Binding SelectBottomLayers}"
                  />

                <MenuItem
                  Header="_Normal layers"
                  HotKey="Ctrl + Shift + N" InputGesture="Ctrl + Shift + N"
                  Command="{Binding SelectNormalLayers}"
                  />

                <Separator />

                <MenuItem
                  Header="_First layer"
                  HotKey="Ctrl + Shift + F" InputGesture="Ctrl + Shift + F"
                  Command="{Binding SelectFirstLayer}"
                  />

                <MenuItem
                  Header="_Last layer"
                  HotKey="Ctrl + Shift + L" InputGesture="Ctrl + Shift + L"
                  Command="{Binding SelectLastLayer}"
                  />

              </ContextMenu>
            </Button.ContextMenu>
          </Button>

          <TextBlock
            Grid.Row="2" Grid.Column="1"
            HorizontalAlignment="Center"
            Text="{Binding LayerStartMM, StringFormat=(\{0:F2\}mm)}" />

          <TextBlock
            Grid.Row="2" Grid.Column="3"
            HorizontalAlignment="Center"
            Text="{Binding LayerEndMM, StringFormat=(\{0:F2\}mm)}" />

          <TextBlock
            Grid.Row="2" Grid.Column="4"
            Margin="10,0,0,0"
            HorizontalAlignment="Center"
            Text="{Binding LayerRangeCountStr}" />

        </Grid>
      </StackPanel>

    </Border>

    <!-- ROI -->
    <Border
        Grid.Row="2" Classes="GroupBox"
      Background="WhiteSmoke"
      Margin="5"
      IsVisible="{Binding IsROIVisible}">

      <StackPanel Orientation="Vertical">
        <TextBlock
          Classes="GroupBoxHeader"
          Text="ROI - Region of interest"/>

        <TextBlock Margin="15"
                   Text="{Binding ROI, StringFormat=Region: \{0\}}" />

        <StackPanel Spacing="20" Margin="15,0,15,15" Orientation="Horizontal">
          <CheckBox 
            Content="Clear ROI after perform the operation"
            IsChecked="{Binding ClearROIAfterOperation}"
            />
          <Button 
            Padding="5" 
            Content="Clear ROI"
            Command="{Binding ClearROI}"/>
        </StackPanel>
        
      </StackPanel>

    </Border>
    
    <!-- Profiles -->
    <Border
        Grid.Row="3" Classes="GroupBox"
      Background="WhiteSmoke"
      Margin="5"
      IsVisible="{Binding IsProfilesVisible}"
      >

      <StackPanel Orientation="Vertical">
        <Grid
          ColumnDefinitions="Auto,*" Background="LightBlue">
          <TextBlock
            Padding="10" FontWeight="Bold"
            VerticalAlignment="Center"
            Text="{Binding Profiles.Count, StringFormat=Profiles: \{0\}}" />

          <StackPanel Orientation="Horizontal"
                      Grid.Column="1"
                      HorizontalAlignment="Right"
                      Spacing="2">
            <Button
              VerticalAlignment="Center"
              ToolTip.Tip="Clear all profiles"
              IsEnabled="{Binding Profiles.Count}"
              Command="{Binding ClearProfiles}"
              >
                <Image Width="16" Height="16" Source="/Assets/Icons/delete-16x16.png" />
            </Button>

          </StackPanel>

        </Grid>

        <Grid
          RowDefinitions="Auto,Auto"
          ColumnDefinitions="*,5,Auto,5,Auto,5,Auto"
          Margin="15"
          >

          <ComboBox 
                  Margin="0,0,0,10"
                  IsEnabled="{Binding Profiles.Count}"
                  IsVisible="{Binding Profiles.Count}"
                  SelectedItem="{Binding SelectedProfileItem}"
                  HorizontalAlignment="Stretch"
                  Items="{Binding Profiles}" />

          <Button
              Grid.Row="0"
              Grid.Column="2"
              Margin="0,0,0,10"
              VerticalAlignment="Stretch"
              ToolTip.Tip="Deselect the current profile"
              IsEnabled="{Binding SelectedProfileItem, Converter={x:Static ObjectConverters.IsNotNull}}"
              IsVisible="{Binding Profiles.Count}"
              Command="{Binding DeselectProfile}">
              <Image Source="/Assets/Icons/checkbox-unmarked-16x16.png" />
            </Button>

          <Button
              Grid.Row="0"
              Grid.Column="4"
              Margin="0,0,0,10"
              VerticalAlignment="Stretch"
              FontWeight="Bold"
              ToolTip.Tip="Set the selected profile as default to load in with this dialog.
&#x0a;Shift + click to clear the default profile."
              IsEnabled="{Binding SelectedProfileItem, Converter={x:Static ObjectConverters.IsNotNull}}"
              IsVisible="{Binding Profiles.Count}"
              Command="{Binding SetDefaultProfile}"
              Content="D"/>

          <Button
            Grid.Row="0"
            Grid.Column="6"
            Margin="0,0,0,10"
              VerticalAlignment="Stretch"
              ToolTip.Tip="Remove the selected profile"
              IsEnabled="{Binding SelectedProfileItem, Converter={x:Static ObjectConverters.IsNotNull}}"
              IsVisible="{Binding Profiles.Count}"
              Command="{Binding RemoveSelectedProfile}"
              >
            <Image Source="/Assets/Icons/trash-16x16.png" />
          </Button>

          <TextBox
            Grid.Row="1"
            Grid.Column="0"
            IsEnabled="{Binding ButtonOkEnabled}"
            Text="{Binding ProfileText}"
            Watermark="Profile name or leave empty for auto name"/>

          <Button
            Grid.Row="1"
            Grid.Column="2"
              VerticalAlignment="Stretch"
              ToolTip.Tip="Add a new profile with the current set values"
              IsEnabled="{Binding ButtonOkEnabled}"
              Command="{Binding AddProfile}"
              >
            <Image Source="/Assets/Icons/plus-16x16.png" />
          </Button>
          
        </Grid>
        
      </StackPanel>

    </Border>

    <!-- Content -->
    <Border Grid.Row="4"
      Classes="GroupBox"
      IsVisible="{Binding IsContentVisible}"
      Background="WhiteSmoke"
      Margin="5">

        <Grid RowDefinitions="Auto,*">
            <TextBlock Classes="GroupBoxHeader"
                       Text="{Binding Title}"/>

            <ScrollViewer Grid.Row="1"
                          Name="ContentScrollViewer"
                Content="{Binding ContentControl}"/>
        </Grid>
    </Border>

    <!-- Actions -->
    <Border Grid.Row="5" Classes="FooterActions">
      <Grid RowDefinitions="Auto"
          ColumnDefinitions="*">
        <StackPanel Spacing="10" Orientation="Horizontal">
          <Button
              Padding="10"
              IsDefault="True"
              IsVisible="{Binding IsButton1Visible}"
              Command="{Binding OnButton1Click}">
            <StackPanel
              Orientation="Horizontal"
              Spacing="10">
              <Image Source="/Assets/Icons/undo-alt-16x16.png"/>
              <TextBlock Text="{Binding Button1Text}"/>
            </StackPanel>
          </Button>

          <CheckBox 
            IsChecked="{Binding IsCheckBox1Checked}"
            IsVisible="{Binding IsCheckBox1Visible}"
            Content="{Binding CheckBox1Text}"/>
        </StackPanel>

        <StackPanel 
          Spacing="10" 
          HorizontalAlignment="Right" 
          Orientation="Horizontal">
          <Button
            Padding="10"
            IsDefault="True"
            IsVisible="{Binding ButtonOkVisible}"
            IsEnabled="{Binding ButtonOkEnabled}"
            Command="{Binding Process}">
            <StackPanel
              Orientation="Horizontal"
              Spacing="10">
              <Image Source="/Assets/Icons/accept-16x16.png"/>
              <TextBlock Text="{Binding ButtonOkText}"/>
            </StackPanel>
          </Button>

          <Button 
            Padding="10"
            IsCancel="True"
            Command="{Binding Close}"
            HotKey="Escape">
            <StackPanel 
              Orientation="Horizontal"
              Spacing="10">
              <Image Source="/Assets/Icons/exit-16x16.png"/>
              <TextBlock Text="Cancel"/>
            </StackPanel>
          </Button>
        </StackPanel>
        
      </Grid>
    </Border>

  </Grid>
</controls:WindowEx>
